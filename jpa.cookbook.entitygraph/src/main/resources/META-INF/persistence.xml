<?xml version="1.0" encoding="UTF-8" ?>
<persistence version="2.1" 
     xmlns="http://xmlns.jcp.org/xml/ns/persistence" 
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
     xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
     http://www.oracle.com/webfolder/technetwork/jsc/xml/ns/persistence/persistence_2_1.xsd">

     <persistence-unit name="testDB" transaction-type="RESOURCE_LOCAL">

          <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>

          <!-- Die Registrierung aller Klassen ist in Verbindung mit einem JEE Container nicht zwingen
               Werden mehr als eine Persistence-Unit verwendet, so ist die Registrierung zu empfehlen
               Wird JPA im Java SE Umfeld verwendet, so ist die Registrierung zwingend -->
          <class>org.anderes.edu.jpa.cookbook.Recipe</class>
          <class>org.anderes.edu.jpa.cookbook.Image</class>
          <class>org.anderes.edu.jpa.cookbook.Ingredient</class>
            
          <!-- shouldn't be valid for java SE per specification, but it works for EclipseLink ... -->
          <!-- <exclude-unlisted-classes>false</exclude-unlisted-classes> -->

          <properties>
               <!-- JPA connection information for the database -->
               <!-- Derby muss gestartet sein: ..\glassfish4\glassfish\bin\asadmin.bat start-database ... -->
               <property name="javax.persistence.jdbc.driver" value="org.apache.derby.jdbc.ClientDriver" />
               <property name="javax.persistence.jdbc.url" value="jdbc:derby://localhost:1527/sun-appserv-samples;create=true" />
               <property name="javax.persistence.jdbc.user" value="APP" />
               <property name="javax.persistence.jdbc.password" value="APP" />
               
               <!-- Specifies the action to be taken by the persistence provider with regard to the database artifacts -->
               <!-- Valid values for this property: none, create, drop-and-create, drop -->
               <property name="javax.persistence.schema-generation.database.action" value="drop-and-create" />


               <!-- Specifies whether the persistence provider is to create the database schema(s) in addition to creating
                    database objects such as tables, sequences, constraints, etc. -->
               <property name="javax.persistence.schema-generation.create-database-schemas" value="true" />
               
               <!-- Specifies which scripts are to be generated by the persistence provider -->
               <!-- Valid values for this property: none, create, drop-and-create, drop -->
               <property name="javax.persistence.schema-generation.scripts.action" value="none" />
               <!-- If scripts are to be generated, controls target locations for writing of scripts. Writers are pre-configured
                    for the persistence provider. Need to be specified only if scripts are to be generated. -->
               <!-- 
               <property name="javax.persistence.schema-generation.scripts.drop-target" value="META-INF/drop.sql" />
               <property name="javax.persistence.schema-generation.scripts.create-target" value="META-INF/create.sql" />
              	-->
              
               <!-- Specifies whether the creation of database artifacts is to occur on the basis of the object/relational
                    mapping metadata, DDL script, or a combination of the two. -->
               <!-- Valid values for this property: metadata, script, metadata-then-script, script-then-metadata -->
               <property name="javax.persistence.schema-generation.create-source" value="metadata" />
               <!-- Specifies whether the dropping of database artifacts is to occur on the basis of the object/relational
                    mapping metadata, DDL script, or a combination of the two. -->
               <!-- Valid values for this property: metadata, script, metadata-then-script, script-then-metadata -->
               <property name="javax.persistence.schema-generation.drop-source" value="metadata" />

               <!-- Specifies a java.IO.Reader configured for reading of the SQL script or a string designating a file URL for
                    the SQL script to create or delete database artifacts. -->
               <!-- 
               <property name="javax.persistence.schema-generation.create-script-source" value="META-INF/create.sql"/>
               <property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/drop.sql"/>
                -->
               
               <!-- Specifies a java.IO.Reader configured for reading of the SQL load script for database initialization or a
                    string designating a file URL for the script. -->
               <property name="javax.persistence.sql-load-script-source" value="META-INF/load.sql" />
               
               <!-- see http://www.eclipse.org/eclipselink/api/2.5/index.html?org/eclipse/persistence/config/TargetDatabase.html -->
               <property name="eclipselink.target-database" value="Derby" />

               <!-- This specifies if generation of database-platform-specific SQL should be enabled -->
               <property name="eclipselink.jdbc.native-sql" value="true" />

               <property name="eclipselink.logging.logger﻿﻿" value="JavaLogger" />
               <property name="eclipselink.logging.level" value="FINE" />
               <property name="eclipselink.logging.level.sql" value="FINE" />
               <property name="eclipselink.logging.parameters" value="true" />
               <property name="eclipselink.logging.timestamp" value="true" />
               <property name="eclipselink.logging.thread" value="false" />
               <property name="eclipselink.logging.session" value="false" />
               <property name="eclipselink.logging.exceptions" value="false" />
               
          </properties>
     </persistence-unit>
</persistence>